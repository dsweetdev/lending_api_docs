<% if defined? base_url -%>
  <% @base_url = base_url -%>
<% else -%>
  <% @base_url = "https://api.example.com/v1/" -%>
<% end -%>

<% if defined? headers -%>
  <% @headers = headers -%>
<% else -%>
  <% @headers = [ [ "Authorization", "Bearer <TOKEN>" ], [ "Content-Type", "application/x-www-form-urlencoded" ] ] -%>
<% end -%>

<% @urlencoded_body = urlencoded_params.map{|param| "#{param[0]}=#{param[1]}"}.join('&') -%>

 > **Example**: <%= description %>
 
<% if defined?(request_body) -%>
 > Request Body

```json
<%= request_body %>

```
<% end -%>

 > Request

```shell
curl -X POST \
  <%= @base_url %><%= endpoint %> \
  <% @headers.each do |header| -%>
  <%= "-H '#{header[0]}: #{header[1]}' \\" %>
  <% end -%>
<% if defined? extra_headers -%>
  <% extra_headers.each do |header| -%>
  <%= "-H '#{header[0]}: #{header[1]}' \\" %>
  <% end -%>
<% end -%>
  -d '<%= @urlencoded_body %>'
```

```csharp
var client = new RestClient("<%= @base_url %><%= endpoint %>");
var request = new RestRequest(Method.POST);
<% @headers.each do |header| -%>
<%= "request.AddHeader(\"#{header[0]}\", \"#{header[1]}\");" %>
<% end -%>
<% if defined? extra_headers -%>
  <% extra_headers.each do |header| -%>
<%= "request.AddHeader(\"#{header[0]}\", \"#{header[1]}\");" %>
  <% end -%>
<% end -%>   
request.AddParameter("application/x-www-form-urlencoded", "<%= @urlencoded_body %>", ParameterType.RequestBody);
IRestResponse response = client.Execute(request);
```

```vb
Dim client = New RestClient("<%= @base_url %><%= endpoint %>")
Dim request = New RestRequest(Method.POST)
<% @headers.each do |header| -%>
<%= "request.AddHeader(\"#{header[0]}\", \"#{header[1]}\")" %>
<% end -%>
<% if defined? extra_headers -%>
  <% extra_headers.each do |header| -%>
<%= "request.AddHeader(\"#{header[0]}\", \"#{header[1]}\")" %>
  <% end -%>
<% end -%>
request.AddParameter("application/x-www-form-urlencoded", "<%= @urlencoded_body %>", ParameterType.RequestBody);
Dim response As IRestResponse = client.Execute(request)
```

```java
OkHttpClient client = new OkHttpClient();

MediaType mediaType = MediaType.parse("application/x-www-form-urlencoded");
RequestBody body = RequestBody.create(mediaType, "<%= @urlencoded_body %>");
Request request = new Request.Builder()
  .url("<%= @base_url %><%= endpoint %>")
  .post(body)
  <% @headers.each do |header| -%>
  <%= ".addHeader(\"#{header[0]}\", \"#{header[1]}\")" %>
  <% end -%>  
<% if defined? extra_headers -%>
  <% extra_headers.each do |header| -%>
  <%= ".addHeader(\"#{header[0]}\", \"#{header[1]}\")" %>
  <% end -%>
<% end -%>
  .build();

Response response = client.newCall(request).execute();
```

```javascript--browser
var settings = {
  "async": true,
  "crossDomain": true,
  <%= "\"url\": \"#{@full_url}\"," %>
  "method": "POST",
  "headers": {
  <% @headers.each do |header| -%>
    <%= "\"#{header[0]}\", \"#{header[1]}\"," %>
  <% end -%>
<% if defined? extra_headers -%>
  <% extra_headers.each do |header| -%>
    <%= "\"#{header[0]}\", \"#{header[1]}\"," %>
  <% end -%>
<% end -%>        
  },
  "processData": false,
  "data": {
  <% urlencoded_params.each_with_index do |param, index| -%>
    <% if index < urlencoded_params.size - 1 -%>
    <%= "\"#{param[0]}\": \"#{param[1]}\"," %>
    <% else %>
    <%= "\"#{param[0]}\": \"#{param[1]}\"" %>
    <% end -%>    
  <% end -%>
  }
}

$.ajax(settings).done(function (response) {
  console.log(response);
});
```

```javascript--node
var request = require("request");

var options = { method: 'POST',
  url: '<%= @base_url %><%= endpoint %>',
  headers: 
  { 
  <% @headers.each do |header| -%>
     <%= "'#{header[0]}': '#{header[1]}'," %>
  <% end -%>    
<% if defined? extra_headers -%>
  <% extra_headers.each do |header| -%>
     <%= "'#{header[0]}': '#{header[1]}'," %>
  <% end -%>
<% end -%>      
  },
  form:
   {
  <% urlencoded_params.each_with_index do |param, index| -%>
    <% if index < urlencoded_params.size - 1 -%>
      <%= "#{param[0]}: '#{param[1]}'," %>
    <% else %>
      <%= "#{param[0]}: '#{param[1]}' }" %>
    <% end -%>    
  <% end -%>
};

request(options, function (error, response, body) {
  if (error) throw new Error(error);

  console.log(body);
});
```

```php
<?php

$request = new HttpRequest();
$request->setUrl('<%= @base_url %><%= endpoint %>');
$request->setMethod(HTTP_METH_POST);

$request->setHeaders(array(
<% @headers.each do |header| -%>
  <%= "'#{header[0]}' => '#{header[1]}'," %>
<% end -%>
<% if defined? extra_headers -%>
  <% extra_headers.each do |header| -%>
  <%= "'#{header[0]}' => '#{header[1]}'," %>
  <% end -%>
<% end -%>   
));

$request->setContentType('application/x-www-form-urlencoded');
$request->setPostFields(array(
  <% urlencoded_params.each_with_index do |param, index| -%>
    <% if index < urlencoded_params.size - 1 -%>
  <%= "'#{param[0]}' => '#{param[1]}'," %>
    <% else %>
  <%= "'#{param[0]}' => '#{param[1]}'" %>
    <% end -%>   
  <% end -%>
));

try {
  $response = $request->send();

  echo $response->getBody();
} catch (HttpException $ex) {
  echo $ex;
}
```

```ruby
require 'uri'
require 'net/http'

url = URI("<%= @base_url %><%= endpoint %>")

http = Net::HTTP.new(url.host, url.port)

request = Net::HTTP::Post.new(url)
<% @headers.each do |header| -%>
<%= "request[\"#{header[0]}\"] = '#{header[1]}'," %>
<% end -%>
<% if defined? extra_headers -%>
  <% extra_headers.each do |header| -%>
<%= "request[\"#{header[0]}\"] = '#{header[1]}'," %>
  <% end -%>
<% end -%> 
request.body = "<%= @urlencoded_body %>"

response = http.request(request)
puts response.read_body
```

```python
import requests

url = "<%= @base_url %><%= endpoint %>"

payload = "<%= @urlencoded_body %>"
headers = {
  <% @headers.each do |header| -%>
    <%= "'#{header[0]}': '#{header[1]}'," %>
  <% end -%>
<% if defined? extra_headers -%>
  <% extra_headers.each do |header| -%>
    <%= "'#{header[0]}': '#{header[1]}'," %>
  <% end -%>
<% end -%>         
    }

response = requests.request("POST", url, data=payload, headers=headers)

print(response.text)
```

```go
package main

import (
  "fmt"
  "strings"
  "net/http"
  "io/ioutil"
)

func main() {

  url := "<%= @base_url %><%= endpoint %>"

  payload := strings.NewReader("<%= @urlencoded_body %>")

  req, _ := http.NewRequest("POST", url, payload)

  <% @headers.each do |header| -%>
  <%= "req.Header.Add(\"#{header[0]}\", \"#{header[1]}\")" %>
  <% end -%>
<% if defined? extra_headers -%>
  <% extra_headers.each do |header| -%>
  <%= "req.Header.Add(\"#{header[0]}\", \"#{header[1]}\")" %>
  <% end -%>
<% end -%> 

  res, _ := http.DefaultClient.Do(req)

  defer res.Body.Close()
  body, _ := ioutil.ReadAll(res.Body)

  fmt.Println(res)
  fmt.Println(string(body))

}
```

```swift
import Foundation

let headers = [
<% if defined? extra_headers -%>
  <% @headers.each do |header| -%>
   <%= "\"#{header[0]}\": \"#{header[1]}\"," %>
  <% end -%> 
  <% extra_headers.each do |header| -%>
   <%= "\"#{header[0]}\": \"#{header[1]}\"," %>
  <% end -%>    
<% else %>
  <% @headers.each do |header| -%>
   <%= "\"#{header[0]}\": \"#{header[1]}\"," %>
  <% end -%> 
<% end -%> 
]

<% urlencoded_params.each_with_index do |param, index| -%>
  <% if index == 0 -%>
<%= "let postData = NSMutableData(data: \"#{param[0]}=#{param[1]}\".data(using: STring.Encoding.utf8)!)" %>
  <% else %>
<%= "postData.append(\"&#{param[0]}=#{param[1]}\".data(using: String.Encoding.utf8)!)" %>  
  <% end -%>
<% end -%>

let request = NSMutableURLRequest(
  url: NSURL(string: "http://api.example.com/v1/<%= endpoint %>")! as URL,
  cachePolicy: .useProtocolCachePolicy,
  timeoutInterval: 10.0)

request.httpMethod = "POST"
request.allHTTPHeaderFields = headers
request.httpBody = postData as Data

let session = URLSession.shared
let dataTask = session.dataTask(
  with: request as URLRequest,
  completionHandler: {
    (data, response, error) -> Void in
    if (error != nil) {
      print(error)
    } else {
      let httpResponse = response as? HTTPURLResponse
      print(httpResponse)
    }
  }
)

dataTask.resume()
```

```perl
use REST::Client;
 
my $client = REST::Client->new();

<% @headers.each do |header| -%>
<%= "$client->addHeader('#{header[0]}', '#{header[1]}');" %>
<% end -%>  
<% if defined? extra_headers -%>
  <% extra_headers.each do |header| -%>
<%= "$client->addHeader('#{header[0]}', '#{header[1]}');" %>
  <% end -%>    
<% end %>

$req = '<%= @urlencoded_body %>';

$url="http://api.example.com/v1/<%= endpoint %>"; 

$client->POST($url, $req);
print $client->responseContent();
print $client->responseHeader('ResponseHeader');
```
<% if defined?(response_body) -%>
> Response Format

> <code class="level200">200 OK</code>

```json
<%= response_body %>
```
<% end -%>